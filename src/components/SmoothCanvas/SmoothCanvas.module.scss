/* src/components/SmoothCanvas/SmoothCanvas.module.scss - FIXED VERSION */
.canvasContainer {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: transparent;
  border-radius: 8px;
  overflow: hidden;

  // Critical optimizations for smoothness
  touch-action: none;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
  -webkit-user-drag: none;

  // Hardware acceleration for maximum performance
  transform: translateZ(0);
  -webkit-transform: translateZ(0);
  will-change: contents;
  contain: layout style paint;

  // Isolation for better compositing
  isolation: isolate;

  // FIXED: Tool-specific cursors with proper inheritance
  &.penMode {
    cursor: crosshair;
    
    .canvas {
      cursor: crosshair !important;
    }
  }

  &.eraserMode {
    cursor: none;
    
    .canvas {
      cursor: none !important;
    }
  }

  &.pointerMode {
    cursor: pointer;
    
    .canvas {
      cursor: pointer !important;
    }
  }
  
  &.panMode {
    cursor: grab !important;
    
    &:active {
      cursor: grabbing !important;
    }
    
    .canvas {
      cursor: grab !important;
      
      &:active {
        cursor: grabbing !important;
      }
    }
  }
  
  // Rectangle/shape mode
  &.rectangleMode {
    cursor: crosshair;
    
    .canvas {
      cursor: crosshair !important;
    }
  }

  // FIXED: Add missing selection mode cursor
  &.selectMode {
    cursor: default;
    
    .canvas {
      cursor: default !important;
    }
  }

  // NEW: AI handwriting mode cursor
  &.aiHandwritingMode {
    cursor: crosshair;
    
    .canvas {
      cursor: crosshair !important;
    }
  }
  
  // Special state for active panning (takes highest priority)
  &.panningMode {
    cursor: grabbing !important;
    
    .canvas {
      cursor: grabbing !important;
    }
    
    // Override all other cursor states during panning
    &.penMode,
    &.eraserMode,
    &.rectangleMode,
    &.pointerMode,
    &.selectMode,
    &.aiHandwritingMode {
      cursor: grabbing !important;
      
      .canvas {
        cursor: grabbing !important;
      }
    }
  }
  
  // Zoom indicator
  .zoomIndicator {
    position: absolute;
    bottom: 10px;
    right: 10px;
    background-color: rgba(255, 255, 255, 0.8);
    border: 1px solid #e5e7eb;
    border-radius: 4px;
    padding: 4px 8px;
    font-size: 12px;
    font-weight: bold;
    color: #374151;
    pointer-events: none;
    z-index: 100;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: opacity 0.2s ease;
    opacity: 0.7;
    
    &:hover {
      opacity: 1;
    }
  }

  // Data loading indicator
  .dataLoadingIndicator {
    position: absolute;
    top: 10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    align-items: center;
    gap: 8px;
    background-color: rgba(139, 92, 246, 0.9);
    color: white;
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 500;
    z-index: 150;
    box-shadow: 0 2px 8px rgba(139, 92, 246, 0.4);
    backdrop-filter: blur(4px);
    animation: slideDownFade 0.3s ease-out;

    .miniSpinner {
      width: 14px;
      height: 14px;
      border: 2px solid rgba(255, 255, 255, 0.3);
      border-top: 2px solid white;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
  }

  // FIXED: Selection info display
  .selectionInfo {
    position: absolute;
    top: 10px;
    left: 10px;
    background-color: rgba(59, 130, 246, 0.9);
    color: white;
    padding: 6px 12px;
    border-radius: 15px;
    font-size: 12px;
    font-weight: 500;
    z-index: 150;
    box-shadow: 0 2px 8px rgba(59, 130, 246, 0.4);
    backdrop-filter: blur(4px);
    animation: slideDownFade 0.3s ease-out;
  }

  // NEW: AI processing indicator
  .aiProcessingInfo {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    align-items: center;
    gap: 10px;
    background-color: rgba(139, 92, 246, 0.95);
    color: white;
    padding: 12px 20px;
    border-radius: 25px;
    font-size: 14px;
    font-weight: 500;
    z-index: 200;
    box-shadow: 0 4px 16px rgba(139, 92, 246, 0.4);
    backdrop-filter: blur(8px);
    animation: slideDownFade 0.3s ease-out;

    .aiSpinner {
      width: 18px;
      height: 18px;
      border: 2px solid rgba(255, 255, 255, 0.3);
      border-top: 2px solid white;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
  }
}

.canvas {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  background: transparent;

  // Critical for smooth pen/stylus input
  touch-action: none;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
  -webkit-user-drag: none;

  // Prevent context menu and text selection
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;

  // Performance optimizations
  will-change: transform;
  contain: strict;

  // Ensure crisp rendering for high DPI displays
  image-rendering: -webkit-optimize-contrast;
  image-rendering: pixelated;
  image-rendering: crisp-edges;
  -webkit-font-smoothing: none;
  -moz-osx-font-smoothing: unset;

  // Hardware acceleration
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-perspective: 1000;
  perspective: 1000;
}

.svg {
  shape-rendering: geometricPrecision;
  text-rendering: geometricPrecision;
  color-rendering: optimizeQuality;
  
  // Enhanced anti-aliasing
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  
  // Ensure crisp, smooth rendering
  image-rendering: -webkit-optimize-contrast;
  image-rendering: crisp-edges;
  
  path {
    vector-effect: non-scaling-stroke;
    shape-rendering: geometricPrecision;
    fill-rule: nonzero;
    
    // Smoother curves
    stroke-linecap: round;
    stroke-linejoin: round;
    
    // Better path rendering
    &:not(#temp-path):not([id^="temp-ai-path"]) {
      mix-blend-mode: normal;
      transition: opacity 0.15s ease, fill 0.15s ease;
    }
    
    &#temp-path {
      opacity: 0.98;
      fill-rule: nonzero;
      shape-rendering: geometricPrecision;
      will-change: d;
      filter: drop-shadow(0 0.5px 1px rgba(0, 0, 0, 0.1));
    }

    // NEW: AI temp path styles
    &[id^="temp-ai-path"] {
      opacity: 0.8;
      fill: none;
      stroke: #8b5cf6;
      stroke-width: 3;
      stroke-dasharray: 5,5;
      stroke-linecap: round;
      stroke-linejoin: round;
      will-change: d;
      animation: aiStrokePulse 2s ease-in-out infinite;
    }

    // FIXED: Selection state styles with better visibility
    &.selected-stroke {
      filter: drop-shadow(0 0 4px rgba(59, 130, 246, 0.8)) !important;
      opacity: 0.9 !important;
      outline: 2px solid rgba(59, 130, 246, 0.3);
      outline-offset: 2px;
    }
  }

  // FIXED: Selection shape styles with better visibility
  .selected-shape {
    filter: drop-shadow(0 0 4px rgba(59, 130, 246, 0.8)) !important;
    opacity: 0.9 !important;
    outline: 2px solid rgba(59, 130, 246, 0.3);
    outline-offset: 2px;
  }

  // NEW: Selected AI text styles
  .selected-ai-text {
    filter: drop-shadow(0 0 4px rgba(139, 92, 246, 0.8)) !important;
    opacity: 0.9 !important;
    outline: 2px solid rgba(139, 92, 246, 0.3);
    outline-offset: 2px;
  }

  .rough-shape {
    transition: opacity 0.2s ease, filter 0.2s ease;
  }

  // AI text elements
  .ai-generated-text {
    transition: all 0.3s ease;
    cursor: pointer;
    
    &:hover {
      opacity: 0.8;
    }
  }
}

// Pattern background for gridlines
.pattern_background {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 0;
  pointer-events: none;
  transition: transform 0.1s ease;
}

// Enhanced eraser cursor with smooth animations
.eraserCursor {
  transition: transform 0.1s cubic-bezier(0.4, 0, 0.2, 1);

  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 60%;
    height: 60%;
    background: rgba(239, 68, 68, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: eraserInnerPulse 1.5s infinite ease-in-out;
  }
}

// Animations
@keyframes slideDownFade {
  0% {
    opacity: 0;
    transform: translateX(-50%) translateY(-10px);
  }
  100% {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
}

@keyframes eraserPulse {
  0% {
    transform: scale(1) translateZ(0);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.05) translateZ(0);
    opacity: 0.6;
  }
  100% {
    transform: scale(1) translateZ(0);
    opacity: 0.8;
  }
}

@keyframes eraserInnerPulse {
  0% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.3;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 0.1;
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.3;
  }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

// NEW: AI stroke animation
@keyframes aiStrokePulse {
  0% {
    stroke-dasharray: 5,5;
    stroke-dashoffset: 0;
    opacity: 0.8;
  }
  50% {
    stroke-dasharray: 5,5;
    stroke-dashoffset: -10;
    opacity: 0.6;
  }
  100% {
    stroke-dasharray: 5,5;
    stroke-dashoffset: -20;
    opacity: 0.8;
  }
}

// NEW: Selection overlay animations
@keyframes selectionPulse {
  0% {
    stroke-dashoffset: 0;
    opacity: 0.8;
  }
  50% {
    stroke-dashoffset: -8;
    opacity: 0.6;
  }
  100% {
    stroke-dashoffset: -16;
    opacity: 0.8;
  }
}

@keyframes selectionBoundsPulse {
  0% {
    stroke-dashoffset: 0;
    opacity: 0.9;
  }
  50% {
    stroke-dashoffset: -12;
    opacity: 0.7;
  }
  100% {
    stroke-dashoffset: -24;
    opacity: 0.9;
  }
}

// Data transition animations
@keyframes fadeInData {
  0% { 
    opacity: 0; 
    transform: scale(0.98);
  }
  100% { 
    opacity: 1; 
    transform: scale(1);
  }
}

@keyframes fadeOutData {
  0% { 
    opacity: 1; 
    transform: scale(1);
  }
  100% { 
    opacity: 0; 
    transform: scale(1.02);
  }
}

// Smooth data transitions
.canvasContainer.dataTransitioning {
  .svg path:not(#temp-path):not([id^="temp-ai-path"]) {
    animation: fadeInData 0.3s ease-out;
  }
}

// Optimize for high DPI displays
@media (-webkit-min-device-pixel-ratio: 2),
(min-resolution: 192dpi) {
  .canvas,
  .svg {
    image-rendering: -webkit-optimize-contrast;
    image-rendering: pixelated;
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    will-change: transform, contents;
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }

  .svg path {
    shape-rendering: geometricPrecision;
    vector-effect: non-scaling-stroke;
  }
}

// Pen input optimizations
@media (pointer: fine) {
  .canvasContainer {
    .canvas,
    .svg {
      touch-action: none;
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      user-select: none;
    }
  }
}

// Touch device optimizations
@media (pointer: coarse) {
  .canvasContainer {
    .canvas,
    .svg {
      touch-action: none;
      -webkit-overflow-scrolling: touch;
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      -webkit-tap-highlight-color: transparent;
      -webkit-user-drag: none;
    }
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .canvasContainer,
  .eraserCursor,
  .dataLoadingIndicator,
  .selectionInfo,
  .aiProcessingInfo {
    animation: none;
    transition: none;
  }

  .svg path#temp-path,
  .svg path[id^="temp-ai-path"] {
    animation: none;
    transition: none;
  }

  .svg path:not(#temp-path):not([id^="temp-ai-path"]) {
    transition: none;
  }

  @keyframes eraserPulse,
  @keyframes eraserInnerPulse,
  @keyframes fadeInData,
  @keyframes fadeOutData,
  @keyframes slideDownFade,
  @keyframes aiStrokePulse {
    0%, 100% {
      transform: scale(1) translateZ(0);
      opacity: 0.8;
    }
  }
}

// Dark mode support
@media (prefers-color-scheme: dark) {
  .canvasContainer {
    &.eraserMode .eraserCursor {
      border-color: #f87171;
      background-color: rgba(248, 113, 113, 0.1);
      box-shadow: inset 0 0 0 2px rgba(248, 113, 113, 0.3);
    }
    
    .zoomIndicator {
      background-color: rgba(30, 41, 59, 0.8);
      border-color: #334155;
      color: #e5e7eb;
    }

    .dataLoadingIndicator {
      background-color: rgba(139, 92, 246, 0.95);
      box-shadow: 0 2px 8px rgba(139, 92, 246, 0.6);
    }

    .selectionInfo {
      background-color: rgba(59, 130, 246, 0.95);
      box-shadow: 0 2px 8px rgba(59, 130, 246, 0.6);
    }

    .aiProcessingInfo {
      background-color: rgba(139, 92, 246, 0.98);
      box-shadow: 0 4px 16px rgba(139, 92, 246, 0.8);
    }
  }
}

// Print optimizations
@media print {
  .canvasContainer {
    .eraserCursor {
      display: none;
    }
    
    .zoomIndicator,
    .dataLoadingIndicator,
    .selectionInfo,
    .aiProcessingInfo {
      display: none;
    }

    .svg path {
      shape-rendering: crispEdges;
      vector-effect: non-scaling-stroke;
    }
  }
}

// Mobile optimizations
@media (max-width: 768px) {
  .canvasContainer {
    .dataLoadingIndicator {
      top: 5px;
      padding: 4px 8px;
      font-size: 11px;

      .miniSpinner {
        width: 12px;
        height: 12px;
        border-width: 1.5px;
      }
    }

    .zoomIndicator {
      bottom: 5px;
      right: 5px;
      padding: 3px 6px;
      font-size: 11px;
    }

    .selectionInfo {
      top: 5px;
      left: 5px;
      padding: 4px 8px;
      font-size: 11px;
    }

    .aiProcessingInfo {
      padding: 8px 16px;
      font-size: 12px;

      .aiSpinner {
        width: 16px;
        height: 16px;
      }
    }
  }
}